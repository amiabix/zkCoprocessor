searchState.loadedDescShard("p3_mds", 0, "A library dealing with maximum distance separable …\nCalculate the convolution of two vectors using a …\nAn MDS permutation which works by interpreting the input …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLike <code>CosetMds</code>, with a few differences:\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTemplate function to perform convolution of vectors.\nThis trait collects the operations needed by <code>Convolve</code> …\nConvolve <code>lhs</code> and <code>rhs</code>.\nGiven input vectors <code>lhs</code> and <code>rhs</code>, calculate their dot …\nGiven an input element, retrieve the corresponding internal\nConvert an internal element of type <code>V</code> back into an external\nGiven the first row <code>circ_matrix</code> of an NxN circulant …\nUse the convolution theorem to calculate the product of …\nThis will throw an error if N = 0 but it’s hard to …\nGiven the first row of a circulant matrix, return the …")