searchState.loadedDescShard("sp1_primitives", 0, "sp1-primitives contains types and functions that are used …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAppend a single deferred proof to a hash chain of deferred …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe Baby Bear prime.\nThe number of bits in a byte.\nThe number of bytes necessary to represent a 64-bit …\nThe maximum size of the memory in bytes.\nThe size of a word in bytes.\nConverts a byte array in little endian to a slice of words.\nConverts a byte array in little endian to a vector of …\nConverts a slice of words to a slice of bytes in little …\nConverts a slice of words to a byte vector in little …\nThe file descriptor through which to access …\nThe file descriptor through which to access …\nThe file descriptor through which to access <code>hook_ecrecover</code>.\nThe file descriptor through which to access …\nThe file descriptor through which to access <code>hook_fp_inverse</code>…\nThe file descriptor through which to access <code>hook_fp_sqrt</code>.\nThe file descriptor for hints.\nThe file descriptor for public values.\nThe file descriptor through which to access …\nThe minimum file descriptor.\nPublic values for the prover.\nHash the input using Blake3.\nHash the public values using Blake3.\nReturns the argument unchanged.\nCreate a <code>SP1PublicValues</code> from a slice of bytes.\nHash the public values using SHA256.\nHash the public values using SHA256, mask the top 3 bits …\nHash the public values using the provided <code>hasher</code> function, …\nCalls <code>U::from(self)</code>.\nCreate a new <code>SP1PublicValues</code>.\nRead a value from the buffer.\nRead a slice of bytes from the buffer.\nHash the input using SHA256.\nWrite a value to the buffer.\nWrite a slice of bytes to the buffer.\nA buffer of serializable/deserializable objects.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSet the position ptr to the beginning of the buffer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRead the serializable object from the buffer.\nWrite the serializable object from the buffer.\nWrite the slice of bytes to the buffer.")