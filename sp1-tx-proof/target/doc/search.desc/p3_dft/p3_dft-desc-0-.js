searchState.loadedDescShard("p3_dft", 0, "This crate contains some DFT implementations.\nThe Bowers G FFT algorithm. See: “Improved Twiddle …\nThe DIT FFT algorithm.\nA parallel FFT algorithm which divides a butterfly network…\nAppend zeros to the “end” of the given matrix, except …\nCompute the “coset DFT” of <code>vec</code>. This can be viewed as …\nCompute the “coset DFT” of <code>vec</code>. This can be viewed as …\nCompute the “coset DFT” of each column in <code>mat</code>. This …\nCompute the “coset DFT” of each column in <code>mat</code>. This …\nCompute the “coset iDFT” of <code>vec</code>. This can be viewed as …\nCompute the “coset iDFT” of <code>vec</code>. This can be viewed as …\nCompute the “coset iDFT” of each column in <code>mat</code>. This …\nCompute the “coset iDFT” of each column in <code>mat</code>. This …\nCompute the low-degree extension of each column in <code>mat</code> …\nCompute the low-degree extension of each column in <code>mat</code> …\nCompute the low-degree extension of each column in <code>mat</code> …\nCompute the low-degree extension of each column in <code>mat</code> …\nCompute the discrete Fourier transform (DFT) <code>vec</code>.\nCompute the discrete Fourier transform (DFT) <code>vec</code>.\nCompute the discrete Fourier transform (DFT) of each …\nDivide each coefficient of the given matrix by its height.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCompute the inverse DFT of <code>vec</code>.\nCompute the inverse DFT of <code>vec</code>.\nCompute the inverse DFT of each column in <code>mat</code>.\nCompute the inverse DFT of each column in <code>mat</code>.\nCompute the inverse DFT of each column in <code>mat</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCompute the low-degree extension of <code>vec</code> onto a larger …\nCompute the low-degree extension of <code>vec</code> onto a larger …\nCompute the low-degree extension of each column in <code>mat</code> …\nCompute the low-degree extension of each column in <code>mat</code> …")